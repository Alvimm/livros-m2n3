import { Menu } from '@/componentes/Menu';
import type { NextPage } from 'next';
import { useState, ChangeEvent, FormEvent } from 'react';
import { useRouter } from 'next/router';
import ControleEditora from '@/classes/controle/ControleEditora';
import Livro from '@/classes/modelo/Livro';
import Head from 'next/head';

const controleEditora = new ControleEditora();
const baseURL = 'http://localhost:3000/api/livros';

const incluirLivro = async (livro: Livro) => {
  const response = await fetch(baseURL, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify(livro),
  });
  const { ok } = await response.json();
  return ok;
};

const LivroDados: NextPage = () => {
  const opcoes = controleEditora.getEditoras().map((editora) => ({
    value: editora.codEditora,
    text: editora.nome,
  }));
  const [titulo, setTitulo] = useState('');
  const [resumo, setResumo] = useState('');
  const [autores, setAutores] = useState('');
  const [codEditora, setCodEditora] = useState(opcoes[0].value);
  const router = useRouter();
  const tratarCombo = (evento: ChangeEvent<HTMLSelectElement>) =>
    setCodEditora(Number(evento.target.value));

  const incluir = (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    const livro = {
      codigo: 0,
      titulo,
      resumo,
      autores: autores.split('\n'),
      codEditora,
    };

    incluirLivro(livro);
    router.push('/LivroLista');
  };

  return (
    <>
      <style>{`form label{font-size: 2rem} .border-color{border-color: #444}`}</style>
      <Menu />
      <Head>
        <title>Loja Next</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <main className="container bg-black text-light">
        <h1 className="my-3 display-2 text-center">Cadastro do Livro</h1>
        <form onSubmit={incluir}>
          <div>
            <label htmlFor="titulo" className="form-label">
              TÃ­tulo
            </label>
            <input
              type="text"
              id="titulo"
              value={titulo}
              className="form-control bg-black text-white border-color"
              onChange={(e) => setTitulo(e.target.value)}
              required
            />
          </div>
          <div>
            <label htmlFor="resumo" className="form-label mt-3">
              Resumo
            </label>
            <textarea
              className="form-control bg-black text-white border-color"
              id="resumo"
              value={resumo}
              onChange={(e) => setResumo(e.target.value)}
              required
            ></textarea>
          </div>
          <div>
            <label htmlFor="codEditora" className="form-label mt-3">
              Editora
            </label>
            <select
              className="form-select bg-black text-white border-color"
              value={codEditora}
              id="codEditora"
              onChange={tratarCombo}
            >
              {opcoes.map((opcao) => (
                <option key={opcao.value} value={opcao.value}>
                  {opcao.text}
                </option>
              ))}
            </select>
          </div>
          <div>
            <label htmlFor="autores" className="form-label mt-3">
              Autores (1 por linha)
            </label>
            <textarea
              className="form-control bg-black text-white border-color"
              id="autores"
              value={autores}
              onChange={(e) => setAutores(e.target.value)}
              required
            ></textarea>
          </div>

          <button type="submit" className="btn btn-outline-primary px-3 mt-3">
            Salvar Dados
          </button>
        </form>
      </main>
    </>
  );
};

export default LivroDados;
